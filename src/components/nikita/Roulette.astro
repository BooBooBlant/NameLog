<div class="container">
  <div id="wheel"></div>
  <div id="arrow"></div>
  <button id="spinButton">Spin that shit</button>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const spinButton = document.getElementById("spinButton");
    const wheel = document.getElementById("wheel");
    const arrow = document.getElementById("arrow");

    // Проверка на существование элементов
    console.debug("Element wheel:", wheel);
    console.debug("Element arrow:", arrow);

    const segments = [
      { class: "black", multiplier: 2, count: 2 },
      { class: "white", multiplier: 3, count: 3 },
      { class: "red", multiplier: 5, count: 5 },
      { class: "gold", multiplier: 25, count: 1 },
    ];

    function generateSegments() {
      let angle = 0;
      const totalSegments = segments.reduce(
        (acc, segment) => acc + segment.count,
        0
      );
      const segmentAngle = 360 / totalSegments;

      segments.forEach((segment) => {
        for (let i = 0; i < segment.count; i++) {
          const node = document.createElement("div");
          node.classList.add("segment", segment.class);
          node.style.transform = `rotate(${angle}deg)`;
          node.dataset.multiplier = String(segment.multiplier);
          node.setAttribute("data-bg", segment.class);
          node.style.setProperty("--data_bg", segment.class);
          wheel.appendChild(node);
          console.debug(`Добавлен сегмент: ${segment.class} с углом ${angle}`); // Добавлен просмотр консоли для отладки
          angle += segmentAngle;
        }
      });
    }

    function spinWheel() {
      const totalSegments = wheel.children.length;
      const randomIndex = Math.floor(Math.random() * totalSegments);
      const selectedSegment = wheel.children[randomIndex];
      console.debug("Selected segment:", selectedSegment);

      const multiplier = parseInt(selectedSegment.dataset.multiplier);

      wheel.style.transition = "transform 1s ease-out";
      const spins = Math.floor(Math.random() * 5) + 1; // Кількість повних обертів колеса
      const endRotation =
        spins * 360 + (360 / totalSegments) * (randomIndex - 0.5); // Загальний кут повороту
      wheel.style.transform = `rotate(${endRotation}deg)`;

      setTimeout(() => {
        selectedSegment.classList.add("active");
        alert(
          `${selectedSegment.dataset.bg}: Ви виграли множник ${multiplier}х!`
        );
        wheel.style.transition = "none";
        wheel.style.transform = "rotate(0deg)";
        setTimeout(() => selectedSegment.classList.remove("active"), 3000);
      }, 1000); // Час, через який скидється положення колеса
    }

    generateSegments();
    spinButton.addEventListener("click", spinWheel);
  });
</script>

<style>
  .container {
    display: flex;
    flex-direction: column;
    align-items: center;
    position: relative;
    border: 1px solid red; /* Граница контейнера для отладки */
  }

  #wheel {
    width: 300px;
    height: 300px;
    border-radius: 50%;
    border: 5px solid yellow; /* Граница колеса для отладки */
    position: relative;
    transform: rotate(0deg);
    background-color: rgba(
      0,
      0,
      255,
      0.2
    ); /* Полупрозрачный синий фон для видимости */
    overflow: hidden; /* Убедимся, что сегменты не выходят за пределы круга */
  }

  #wheel :global(.segment) {
    position: absolute;
    width: 50%;
    height: 50%;
    top: 0;
    left: 50%;
    clip-path: polygon(100% 0, 100% 100%, 0 100%);
    transform-origin: 0 100%;

    background-color: var(--data_bg);
  }

  #wheel :global(.segment.active) {
    filter: contrast(0.5);
    transform: scale(0.5);
    z-index: 1;
  }

  #arrow {
    width: 0;
    height: 0;
    border-left: 10px solid transparent;
    border-right: 10px solid transparent;
    border-bottom: 20px solid #ff0000; /* Красная стрелка для видимости */
    position: absolute;
    top: -30px;
    left: 50%;
    transform: translateX(-50%);
    z-index: 10; /* Убедимся, что стрелка над колесом */
  }
</style>
