<div class="container">
  <div id="wheel_container">
    <div id="wheel"></div>
    <div id="gaugeContainer">
      <div id="gaugeProgress"></div>
      <div id="centerText">До начала игры<br /><span id="time">7.5</span></div>
    </div>
    <div id="arrow"></div>
  </div>
  <button id="spinButton">Spin that shit</button>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const spinButton = document.getElementById("spinButton");
    const wheel = document.getElementById("wheel");
    const timeElement = document.getElementById("time");
    const gaugeProgress = document.getElementById("gaugeProgress");

    const segments = [
      { class: "black", multiplier: 2, count: 2 },
      { class: "white", multiplier: 3, count: 3 },
      { class: "red", multiplier: 5, count: 5 },
      { class: "gold", multiplier: 25, count: 1 },
    ];

    function generateSegments() {
      let angle = 0;
      const totalSegments = segments.reduce(
        (acc, segment) => acc + segment.count,
        0
      );
      const segmentAngle = 360 / totalSegments;

      segments.forEach((segment) => {
        for (let i = 0; i < segment.count; i++) {
          const node = document.createElement("div");
          node.classList.add("segment", segment.class);
          node.style.transform = `rotate(${angle}deg)`;
          node.style.transformOrigin = "50% 100%";
          node.dataset.multiplier = String(segment.multiplier);
          node.style.setProperty("--data_bg", segment.class);
          wheel.appendChild(node);
          angle += segmentAngle;
        }
      });
    }

    function spin() {
      const duration = Math.random() * 2 + 4; // между 4 и 6 секунд
      const rotation = Math.floor(Math.random() * 360 + 360 * 3); // между 1080 и 1440 градусов

      wheel.style.transition = `transform ${duration}s ease-out`;
      wheel.style.transform = `rotate(${rotation}deg)`;

      setTimeout(() => {
        const finalRotation = rotation % 360;
        wheel.style.transition = "none";
        wheel.style.transform = `rotate(${finalRotation}deg)`;
        // здесь можно добавить логику для выбора победителя
      }, duration * 1000);
    }

    function updateGauge() {
      let currentTime = 7.5;
      const interval = setInterval(() => {
        currentTime -= 0.1;
        if (currentTime <= 0) {
          clearInterval(interval);
          spin();
          return;
        }
        timeElement.textContent = currentTime.toFixed(1);
        gaugeProgress.style.transform = `scaleX(${currentTime / 2.5})`;
      }, 100);
    }

    generateSegments();

    spinButton.addEventListener("click", updateGauge);
  });
</script>

<style>
  .container {
    display: flex;
    flex-direction: column;
    align-items: center;
    position: relative;
  }

  #wheel {
    width: 100%;
    height: 100%;
    position: relative;
    transform: rotate(0deg);
    background-color: white;
    overflow: hidden;

    display: flex;
    justify-content: center;
    align-items: center;
  }

  #wheel_container {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;

    width: 300px;
    height: 300px;

    border-radius: 50%;
    border: 5px solid yellow;
    overflow: hidden;
  }

  #wheel :global(.segment) {
    position: absolute;
    width: 50%;
    height: 50%;
    top: 0;
    left: 50%;
    clip-path: polygon(100% 0, 100% 100%, 0 100%);
    transform-origin: 0 100%;

    background-color: var(--data_bg);
  }

  #arrow {
    width: 0;
    height: 0;
    border-left: 10px solid transparent;
    border-right: 10px solid transparent;
    border-bottom: 20px solid red;
    position: absolute;
    top: -20px;
    left: 50%;
    transform: translateX(-50%);
    z-index: 10;
  }

  #gaugeContainer {
    width: 100%;
    height: 100%;
    border-radius: 50%;
    position: absolute;
    background-color: rgba(255, 255, 255, 0.8);
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    opacity: 0.5;
  }

  #gaugeProgress {
    width: 80%;
    height: 10px;
    background-color: lightgray;
    border-radius: 5px;
    overflow: hidden;
    margin-bottom: 10px;
    position: relative;
  }

  #centerText {
    text-align: center;
    font-size: 18px;
    color: #333;
  }

  button {
    margin-top: 20px;
    padding: 10px 20px;
    font-size: 16px;
  }
</style>
